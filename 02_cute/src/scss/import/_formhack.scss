/* FormHack v1.2.0 (formhack.io) */

// Config -----------------------------

// Font
$fh-font-family: "Nunito" , "游ゴシック", YuGothic, "ヒラギノ角ゴ Pro W3", "Hiragino Kaku Gothic Pro", Verdana, "メイリオ", Meiryo, Osaka, "ＭＳ Ｐゴシック", "MS PGothic", sans-serif;
$fh-font-size: 16px !default;
$fh-font-color: rgb(40, 40, 40) !default;

// Borders
$fh-border-radius: 3px !default;
$fh-border-width: 1px !default;
$fh-border-style: solid !default;
$fh-border-color: #D0D0D0 !default;

// Inputs, Textareas, Select, Option
$fh-input-height: 46px !default;
$fh-input-width: 100% !default;
$fh-input-max-width: 400px !default;
$fh-input-bg-color: #fff !default;
$fh-focus-bg-color: rgb(255, 255, 255) !default;
$fh-focus-border-color: #7FAA8C !default;
$fh-focus-font-color: $fh-font-color !default;

// Select Vendor Styling
$fh-allow-select-vendor-styling: true !default;

// Fieldset & Legend Styling
$fh-fieldset-bare: false !default;

// Buttons & Input Submits
$fh-button-height: 40px !default;
$fh-button-width: 100% !default;
$fh-button-max-width: 100% !default;
$fh-button-font-color: $fh-font-color !default;
$fh-button-bg-color: $fh-focus-bg-color !default;
$fh-button-hover-bg-color: $fh-border-color !default;
$fh-button-hover-font-color: $fh-font-color !default;

// Layout
$fh-centered: false !default;
$fh-display: block !default;


// Center/Left-Aligned Layout
@mixin center-layout {
  @if $fh-centered == true {
    margin: 10px auto;
    text-align: center;
  }
  @else {
    margin: 10px 0;
  }
}

/* Global Reset Styles ------------------ */

input,
textarea,
select,
option,
optgroup,
button,
legend,
fieldset {
  font-family: $fh-font-family;
  box-sizing: border-box;
  outline: none;

  font-size: $fh-font-size;
  color: $fh-font-color;
  vertical-align: top;

  display: $fh-display;
  @include center-layout;
}


datalist {
  font-size: $fh-font-size;
}

// label {
//   display: $fh-display;
//   @include center-layout;
// }



/* Input & Textarea ------------------ */

/* Fields with standard width */
input[type="text"],
input[type="email"],
input[type="password"],
input[type="search"],
input[type="color"],
input[type="date"],
input[type="datetime-local"],
input[type="month"],
input[type="number"],
input[type="tel"],
input[type="time"],
input[type="url"],
input[type="week"],
input[list],
input[type="file"],
select,
textarea {
  width: $fh-input-width;
  // max-width: $fh-input-max-width;
  padding: $fh-input-height / 5;
  background-color: $fh-input-bg-color;
  border-radius: $fh-border-radius;
  border: $fh-border-width $fh-border-style $fh-border-color;
}

/* Fields with standard height */
input[type="text"],
input[type="email"],
input[type="password"],
input[type="search"],
input[type="color"],
input[type="date"],
input[type="datetime-local"],
input[type="month"],
input[type="number"],
input[type="tel"],
input[type="time"],
input[type="url"],
input[type="week"],
input[list] {
  height: $fh-input-height;
  -webkit-appearance: none;
  padding: 0 1em;
}

/* Other */

textarea {
  -webkit-appearance: none;
  overflow: auto;
  padding: 1rem;
}

input[type="range"] {
  height: $fh-input-height;
  width: $fh-input-width;
  // max-width: $fh-input-max-width;
}

input[type="file"] {
  min-height: $fh-input-height;
}

input[type="search"] {
  height: $fh-input-height;
  -webkit-appearance: none;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

input[type="checkbox"],
input[type="radio"] {
  display: inline-block;
  vertical-align: middle;
}
// For checkbox and radio to be centered, need to wrap the input and label in a span -
// .checkbox-container {
//  display: block;
//  text-align: center;
// }


/* Select ------------------ */

select {
  height: $fh-input-height;

  @if $fh-allow-select-vendor-styling == false {
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    -o-appearance: none;
    &::-ms-expand {
      display: none;
    }
  }
}

select[multiple] {
  height: auto;
  min-height: $fh-input-height;
  padding: 0;

  option {
    margin: 0;
    padding: $fh-input-height / 5;
  }
}

/* Fieldset ------------------ */

fieldset {
  @if $fh-fieldset-bare == true {
    padding: 0;
    border: 0;
  }
  @else {
    padding: 10px 25px;
    border-radius: $fh-border-radius;
    border: $fh-border-width $fh-border-style $fh-border-color;
  }
}

legend {
  @if $fh-fieldset-bare == true {
    padding: 0;
    font-weight: inherit;
  }
  @else {
    padding: 0 5px;
    font-weight: 700;
  }
}

/* Buttons, Input Type Submit/Reset ------------------ */

button,
input[type="button"],
input[type="submit"],
input[type="reset"],
input[type="image"] {
  height: $fh-button-height;
  width: $fh-button-width;
  // max-width: $fh-button-max-width;
  background-color: $fh-button-bg-color;
  padding: $fh-input-height / 5;
  cursor: pointer;

  // color: $fh-button-font-color;
  // font-weight: 700;

  -webkit-appearance: none;
  -moz-appearance: none;

  border-radius: $fh-border-radius;
  // border: $fh-border-width $fh-border-style $fh-border-color;
  border: none;
}

input[type="image"] {
  text-align: center;
  padding: $fh-input-height / 5;
}

/* States ------------------ */

input[disabled],
textarea[disabled],
select[disabled],
option[disabled],
button[disabled] {
  cursor: not-allowed;
}

input:focus,
textarea:focus,
select:focus,
option:focus,
button:focus  {
  background-color: $fh-focus-bg-color;
  border-color: $fh-focus-border-color;
}

input[type="checkbox"]:focus,
input[type="radio"]:focus {
  outline: $fh-focus-border-color solid 2px;
}

button:hover,
input[type="button"]:hover,
input[type="submit"]:hover,
input[type="reset"]:hover,
button:focus,
input[type="button"]:focus,
input[type="submit"]:focus,
input[type="reset"]:focus {
  background-color: $fh-button-hover-bg-color;
  color: $fh-button-hover-font-color;
}



// Chrome style off
input:-webkit-autofill {
  box-shadow: 0 0 0 1000px #fff inset;
  transition: background-color 9999s;
}


// IE style off
input::-ms-clear {
  visibility: hidden;
}

/* password */
input::-ms-reveal {
  visibility: hidden;
}



/* Placeholder ------------------ */

$placeholder-txt-color: #95989A;

::-webkit-input-placeholder { /* Chrome */
  color: $placeholder-txt-color;
}
:-ms-input-placeholder { /* IE 10+ */
  color: $placeholder-txt-color;
}
::-moz-placeholder { /* Firefox 19+ */
  color: $placeholder-txt-color;
  opacity: 1;
}
:-moz-placeholder { /* Firefox 4 - 18 */
  color: $placeholder-txt-color;
  opacity: 1;
}


// castum -----------------------------

select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  vertical-align: middle;
  background: #fff url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='%23333'><polygon points='0,0 100,0 50,50'/></svg>") no-repeat;
  background-position: right .7rem top 70%;
  background-size: 10px 18px;
}


// castum checkbox radio -----------------------------

$radio-size: 20px !default;
$checkbox-size: 20px !default;
$dot-size: 14px !default;
$border-size: 1px !default;
$border-color: #D0D0D0 !default;
$main-color: #7FAA8C !default;
$disabled-color: lighten($border-color, 14%) !default;
$disabled-checked-color: lighten($main-color, 30%) !default;

// common
@keyframes hover-color {
  from {
    border-color: $border-color;
  }

  to {
    border-color: $main-color;
  }
}

.radio,
.checkbox {
  display: inline-block;
  position: absolute;
  display: none !important;
}
.radio[disabled],
.checkbox[disabled] {
  cursor: not-allowed;
}

.radio + label,
.checkbox + label {
  position: relative;
  display: inline-block;
  padding-left: $radio-size + 7px;
  cursor: pointer;
  vertical-align: middle;

  &:hover {
    &:before {
      animation-duration: 0.4s;
      animation-fill-mode: both;
      animation-name: hover-color;
    }
  }
  &:before {
    position: absolute;
    top: 50%;
    left: 0;
    transform: translateY(-50%);
    display: inline-block;
    width: $checkbox-size;
    height: $checkbox-size;
    content: '';
    border: $border-size solid $border-color;
    background-color: white;
  }
  &:after {
    position: absolute;
    display: none;
    content: '';
  }
}

.radio[disabled] + label,
.checkbox[disabled] + label {
  cursor: not-allowed;
  color: $disabled-color;
  &:hover,
  &:before,
  &:after {
    cursor: not-allowed;
  }
  &:hover {
    &:before {
      border: 1px solid $disabled-color;
      animation-name: none;
    }
  }
  &:before {
    border-color: $disabled-color;
  }
}

.radio:checked + label,
.checkbox:checked + label {
  &:before {
    animation-name: none;
  }
  &:after {
    display: block;
  }
}


.checkbox + label {
  &:before {
    border-radius: 2px;
  }
  &:after {
    top: 0;
    left: 0;
    box-sizing: border-box;
    width: 6px;
    height: 12px;
    transform: rotate(45deg) translate(135%,-15%);
    border-width: 2px;
    border-style: solid;
    border-color: #fff;

    border-top: 0;
    border-left: 0;
  }
}
.checkbox:checked + label {
  &:before {
    background: $main-color;
    border-color: $main-color;
  }
}
.checkbox:checked[disabled] + label {
  &:before {
    background: $disabled-checked-color;
    border-color: $disabled-checked-color;
  }
}


.radio + label {
  &:before {
    border-radius: 50%;
  }
  &:after {
    top: $checkbox-size / 5 -$border-size;
    left: $checkbox-size / 5;
    // transform: translate(29%,-58%);
    width: $dot-size;
    height: $dot-size;
    border-radius: 50%;
    background: $main-color;
  }
}

.radio:checked + label {
  &:before {
    border: $border-size solid $main-color;
  }
}
.radio:checked[disabled] + label {
  &:before {
    border: $border-size solid $disabled-checked-color;
  }
  &:after {
    background: $disabled-checked-color;
  }
}


// <input class="checkbox" type="checkbox" name="layout" id="1" value="option1">
// <label class="pull-left text" for="1">Normal</label>

// <input class="radio" type="radio" name="radio" id="2" value="option1">
// <label for="2">Normal</label>


// castum checkbox radio nest -----------------------------

.label-radio input,
.label-checkbox input {
  position: absolute;
  display: none !important;
}
.label-radio input[disabled],
.label-checkbox input[disabled] {
  cursor: not-allowed;
}

.label-radio span,
.label-checkbox span {
  position: relative;
  display: inline-block;
  padding-left: $radio-size + 7px;
  cursor: pointer;
  vertical-align: middle;

  &:hover {
    &:before {
      animation-duration: 0.4s;
      animation-fill-mode: both;
      animation-name: hover-color;
    }
  }
  &:before {
    position: absolute;
    top: -1px;
    left: 0;
    // transform: translateY(-55%);
    display: inline-block;
    width: $checkbox-size;
    height: $checkbox-size;
    content: '';
    border: $border-size solid $border-color;
    background-color: white;
  }
  &:after {
    position: absolute;
    display: none;
    content: '';
  }
}

.label-radio input[disabled] + span,
.label-checkbox input[disabled] + span {
  cursor: not-allowed;
  color: $disabled-color;
  &:hover,
  &:before,
  &:after {
    cursor: not-allowed;
  }
  &:hover {
    &:before {
      border: 1px solid $disabled-color;
      animation-name: none;
    }
  }
  &:before {
    border-color: $disabled-color;
  }
}

.label-radio input:checked + span,
.label-checkbox input:checked + span {
  &:before {
    animation-name: none;
  }
  &:after {
    display: block;
  }
}


.label-checkbox span {
  &:before {
    border-radius: 2px;
  }
  &:after {
    top: $border-size + 1;
    left: 7px;
    box-sizing: border-box;
    width: 7px;
    height: 12px;
    transform: rotate(45deg);
    border-width: 2px;
    border-style: solid;
    border-color: #fff;

    border-top: 0;
    border-left: 0;
  }
}
.label-checkbox input:checked + span {
  &:before {
    background: $main-color;
    border-color: $main-color;
  }
}
.label-checkbox input:checked[disabled] + span {
  &:before {
    border: $disabled-checked-color;
    background: $disabled-checked-color;
  }
}

.label-radio {
  display: inline-block;
}

.label-radio span {
  &:before {
    border-radius: 50%;
  }
  &:after {
    top: $checkbox-size / 5 -$border-size;
    left: $checkbox-size / 5;
    // transform: translate(29%,-58%);
    width: $dot-size;
    height: $dot-size;
    border-radius: 50%;
    background: $main-color;
  }
}

.label-radio input:checked + span {
  &:before {
    border: $border-size solid $main-color;
  }
}
.label-radio:checked[disabled] span {
  &:before {
    border: $border-size solid $disabled-checked-color;
  }
  &:after {
    background: $disabled-checked-color;
  }
}